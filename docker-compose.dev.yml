services:

  workspace:
    build:
      context: .
    container_name: workspace
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock

    working_dir: /app
    command: sh -c "[ ! -f .env ] && cp .env.example .env; composer install && composer update && npm install && php artisan octane:start --watch --server=swoole --max-requests=250 --host=0.0.0.0 --port=9501"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      sc:
        aliases:
          - workspace


  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: root
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${EXTERNAL_DB_PORT}:5432"
    restart: unless-stopped
    networks:
      sc:
        aliases:
          - postgres


  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./log/nginx:/var/log/nginx
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - postgres
      - workspace
    networks:
      - sc


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    networks:
      - sc



  pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin
      restart: always
      ports:
        - "5050:80"
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@example.com
        PGADMIN_DEFAULT_PASSWORD: root
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      networks:
        - sc

  redis:
    image: redis:latest
    container_name: redis
    command: [ "redis-server", "--requirepass", "root" ]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sc

  redis_insight:
    image: redis/redisinsight
    container_name: redisinsight
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - sc

volumes:
  postgres_data:
    name: postgres_data
  portainer_data:
    name: portainer_data
  pgadmin_data:
    name: pgadmin_data
  redis_data:
    name: redis_data
  redis_insight_data:
    name: redis_insight_data

networks:
  sc:
    name: sc
    driver: bridge
